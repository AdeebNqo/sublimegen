{
  "name": "Walter",
  "scopeName": "source.walt",
  "fileTypes": [
    "walt"
  ],
  "patterns": [
    {},
    {
      "match": "\\/\\/.*\\n",
      "name": "comment.line.bnf"
    },
    {
      "match": "\\/\\*(.|\\*)*\\*\\/",
      "name": "comment.block.bnf",
      "captures": {
        "2": {
          "name": "comment.block.bnf"
        }
      }
    },
    {
      "match": "(\\/\\/.*\\n)(\\/\\*(.|\\*)*\\*\\/)",
      "name": "comment.block.bnf",
      "captures": {
        "1": {
          "name": "comment.line.bnf"
        },
        "2": {
          "name": "comment.block.bnf"
        }
      }
    },
    {
      "match": "[ ]\\t\\n\\r",
      "name": "source.walt"
    },
    {
      "match": "((\\/\\/.*\\n)(\\/\\*(.|\\*)*\\*\\/))([ ]\\t\\n\\r)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "comment.block.bnf"
        },
        "2": {
          "name": "source.walt"
        }
      }
    },
    {
      "match": "[0-9]",
      "name": "constant.numeric.bnf"
    },
    {
      "match": "[0-7]",
      "name": "constant.numeric.bnf"
    },
    {
      "match": "[0-9][A-F][a-f]",
      "name": "constant.numeric.bnf"
    },
    {
      "match": "([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "([1-9])(([0-9]))*",
      "name": "constant.numeric.bnf",
      "captures": {
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "0(([0-7]))*",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        },
        "3": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "-?(([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*)",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "int64\\((-?(([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*))\\)",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "int32\\((-?(([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*))\\)",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "uint64\\((([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*)\\)",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "uint32\\((([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*)\\)",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "([0-9])(([0-9]))*",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "3": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "(e|E)(\\+|-)?(([0-9])(([0-9]))*)",
      "name": "constant.numeric.bnf",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "((([0-9])(([0-9]))*).(([0-9])(([0-9]))*)((e|E)(\\+|-)?(([0-9])(([0-9]))*)))((([0-9])(([0-9]))*).((([0-9])(([0-9]))*)|((e|E)(\\+|-)?(([0-9])(([0-9]))*))))((([0-9])(([0-9]))*)((e|E)(\\+|-)?(([0-9])(([0-9]))*)))(.(([0-9])(([0-9]))*)(((e|E)(\\+|-)?(([0-9])(([0-9]))*)))?)",
      "name": "constant.numeric.bnf",
      "captures": {
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "double\\(-?((((([0-9])(([0-9]))*).(([0-9])(([0-9]))*)((e|E)(\\+|-)?(([0-9])(([0-9]))*)))((([0-9])(([0-9]))*).((([0-9])(([0-9]))*)|((e|E)(\\+|-)?(([0-9])(([0-9]))*))))((([0-9])(([0-9]))*)((e|E)(\\+|-)?(([0-9])(([0-9]))*)))(.(([0-9])(([0-9]))*)(((e|E)(\\+|-)?(([0-9])(([0-9]))*)))?))|(([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*))\\)",
      "name": "constant.numeric.bnf",
      "captures": {
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "float\\(-?((((([0-9])(([0-9]))*).(([0-9])(([0-9]))*)((e|E)(\\+|-)?(([0-9])(([0-9]))*)))((([0-9])(([0-9]))*).((([0-9])(([0-9]))*)|((e|E)(\\+|-)?(([0-9])(([0-9]))*))))((([0-9])(([0-9]))*)((e|E)(\\+|-)?(([0-9])(([0-9]))*)))(.(([0-9])(([0-9]))*)(((e|E)(\\+|-)?(([0-9])(([0-9]))*)))?))|(([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*))\\)",
      "name": "constant.numeric.bnf",
      "captures": {
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "[A-Z]",
      "name": "constant.character.bnf"
    },
    {
      "match": "[a-z]",
      "name": "constant.character.bnf"
    },
    {
      "match": "([A-Z])([a-z])_([0-9])",
      "name": "constant.character.bnf",
      "captures": {
        "1": {
          "name": "constant.character.bnf"
        },
        "2": {
          "name": "constant.character.bnf"
        },
        "3": {
          "name": "constant.numeric.bnf"
        },
        "4": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "(([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*",
      "name": "string.quoted.double.bnf",
      "captures": {
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)",
      "name": "string.quoted.double.bnf",
      "captures": {
        "1": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "double",
      "name": "variable.language.bnf"
    },
    {
      "match": "float",
      "name": "variable.language.bnf"
    },
    {
      "match": "int64",
      "name": "variable.language.bnf"
    },
    {
      "match": "uint64",
      "name": "variable.language.bnf"
    },
    {
      "match": "int32",
      "name": "variable.language.bnf"
    },
    {
      "match": "uint32",
      "name": "variable.language.bnf"
    },
    {
      "match": "\\[\\]byte",
      "name": "variable.language.bnf"
    },
    {
      "match": "string",
      "name": "variable.language.bnf"
    },
    {
      "match": "bool",
      "name": "variable.language.bnf"
    },
    {
      "match": "((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*",
      "name": "string.quoted.double.bnf",
      "captures": {
        "1": {
          "name": "string.quoted.double.bnf"
        },
        "3": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(double)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(float)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(int64)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(uint64)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(int32)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(uint32)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(\\[\\]byte)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(string)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\$(bool)\\((((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*)(.((([A-Z])|([a-z])|_)((([A-Z])([a-z])_([0-9])))*))*)\\)",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "2": {
          "name": "string.quoted.double.bnf"
        }
      }
    },
    {
      "match": "\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        },
        "3": {
          "name": "constant.numeric.bnf"
        },
        "4": {
          "name": "constant.numeric.bnf"
        },
        "5": {
          "name": "constant.numeric.bnf"
        },
        "6": {
          "name": "constant.numeric.bnf"
        },
        "7": {
          "name": "constant.numeric.bnf"
        },
        "8": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        },
        "3": {
          "name": "constant.numeric.bnf"
        },
        "4": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f])",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "\\\\([0-7])([0-7])([0-7])",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "constant.numeric.bnf"
        }
      }
    },
    {
      "match": "(\\\\([0-7])([0-7])([0-7]))(\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f]))",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "2": {
          "name": "source.walt"
        },
        "3": {
          "name": "source.walt"
        },
        "4": {
          "name": "source.walt"
        }
      }
    },
    {
      "match": "`.*`",
      "name": "source.walt"
    },
    {
      "match": "\\\\(a|b|f|n|r|t|v|\\\\|'|\")",
      "name": "source.walt"
    },
    {
      "match": ".(\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\(a|b|f|n|r|t|v|\\\\|'|\"))",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "source.walt"
        },
        "2": {
          "name": "source.walt"
        },
        "4": {
          "name": "source.walt"
        }
      }
    },
    {
      "match": "\"((.(\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\(a|b|f|n|r|t|v|\\\\|'|\")))|((\\\\([0-7])([0-7])([0-7]))(\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f]))))*\"",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "source.walt"
        },
        "2": {
          "name": "source.walt"
        }
      }
    },
    {
      "match": "(`.*`)(\"((.(\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\(a|b|f|n|r|t|v|\\\\|'|\")))|((\\\\([0-7])([0-7])([0-7]))(\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f]))))*\")",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "source.walt"
        },
        "3": {
          "name": "source.walt"
        }
      }
    },
    {
      "match": "'((.(\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\(a|b|f|n|r|t|v|\\\\|'|\")))|((\\\\([0-7])([0-7])([0-7]))(\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f]))))'",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "source.walt"
        },
        "2": {
          "name": "source.walt"
        }
      }
    },
    {
      "match": "(([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*)('((.(\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\(a|b|f|n|r|t|v|\\\\|'|\")))|((\\\\([0-7])([0-7])([0-7]))(\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f]))))')",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "constant.numeric.bnf"
        },
        "3": {
          "name": "source.walt"
        }
      }
    },
    {
      "match": "(\\[\\]byte){(([ ]\\t\\n\\r))*(((([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*)('((.(\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\(a|b|f|n|r|t|v|\\\\|'|\")))|((\\\\([0-7])([0-7])([0-7]))(\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f]))))'))((([ ]\\t\\n\\r))*,(([ ]\\t\\n\\r))*((([1-9])(([0-9]))*0(([0-7]))*0(x|X)([0-9][A-F][a-f])(([0-9][A-F][a-f]))*)('((.(\\\\u([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\U([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f])([0-9][A-F][a-f]))(\\\\(a|b|f|n|r|t|v|\\\\|'|\")))|((\\\\([0-7])([0-7])([0-7]))(\\\\x([0-9][A-F][a-f])([0-9][A-F][a-f]))))')))*)?(([ ]\\t\\n\\r))*}",
      "name": "source.walt",
      "captures": {
        "1": {
          "name": "variable.language.bnf"
        },
        "3": {
          "name": "source.walt"
        }
      }
    }
  ],
  "uuid": "541ccd00-3546-40f9-7cde-61657193f175"
}